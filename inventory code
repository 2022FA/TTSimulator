import java.util.ArrayList;
import java.util.Dictionary;
import java.util.Hashtable;

public class Features {
    public static Dictionary<int, String> featuresList = new Hashtable<>();
    features.put(1, "Rage, Unarmored Defense");
    features.put(2, "Reckless Attack, Danger Sense");
    features.put(3, "Primal Path, Primal Knowledge");
    features.put(4, "Ability Score Improvement");
    features.put(5, "Extra Attack, Fast Movement");
    features.put(6, "Path feature");
    features.put(7, "Feral Instinct, Instinctive Pounce");
    features.put(8, "Ability Score");
    features.put(9, "Brutal Critical");
    features.put(10, "Path feature, Primal knowledge");
    features.put(11, "Relentless Rage");
    features.put(12, "Ability Score Improvement");
    features.put(13, "Brutal Critical");
    features.put(14, "Path feature");
    features.put(15, "Persistent Rage");
    features.put(16, "Ability Score Improvement");
    features.put(17, "Brutal Critical");
    features.put(18, "Indomitable Might");
    features.put(19, "Ability Score Improvement");
    features.put(20, "Primal Champion");
}

public class Character {
    // region Private Members
    private String name;
    private int gold;
    private int level;
    private int maxHP;
    private ArrayList<String> inventory;
    private ArrayList<String> features;
    //endregion

    //region Constructors
    public Character(String name, int gold) {
        this.name = name;
        this.gold = gold;
        this.level = 1;
        this.maxHP = 12;
        this.inventory = new ArrayList<>();
        this.features = new ArrayList<>();
    }
    //endregion

    //region Public Methods
    public void addItem(String item) {
        inventory.add(item);
        System.out.println(item + " added to " + name + "'s inventory.");
    }

    public void removeItem(String item) {
        if (inventory.contains(item)) {
            inventory.remove(item);
            System.out.println(item + " removed from " + name + "'s inventory.");
        } else {
            System.out.println(item + " not found in " + name + "'s inventory.");
        }
    }

    public void addGold(int amount) {
        gold += amount;
        System.out.println(name + " received " + amount + " gold. Total gold: " + gold);
    }

    public void removeGold(int amount) {
        if (gold >= amount) {
            gold -= amount;
            System.out.println(name + " spent " + amount + " gold. Total gold: " + gold);
        } else {
            System.out.println(name + " doesn't have enough gold.");
        }
    }

    public void levelUp() {
        if (level == 20) {
            System.out.println("Max level reached (20)");
            return;
        }

        level += 1;
        maxHP += 7;
        features.add(Features.featuresList.get(level));
        System.out.println("Character's level is now " + level);
        System.out.println("Character's max HP is now " + maxHP);
    }

    public void levelDown() {
        if (level == 1) {
            System.out.println("Min level reached (1)");
            return;
        }

        level -= 1;
        maxHP -= 7;
        features.remove(features.size() - 1);
        System.out.println("Character's level is now " + level);
        System.out.println("Character's max HP is now " + maxHP);
    }

    public void showInventory() {
        System.out.println(name + "'s Inventory:");
        for (String item : inventory) {
            System.out.println(item);
        }
        System.out.println("Gold: " + gold);
    }
    //endregion

    public static void main(String[] args) {
        Character player1 = new Character("Player 1", 0);
        Character player2 = new Character("Player 2", 0);

        player1.addGold(50);
        player1.addItem("Sword");
        player1.addItem("Potion");
        player1.showInventory();

        player2.addGold(100);
        player2.addItem("Shield");
        player2.showInventory();

        player1.removeItem("Potion");
        player1.removeGold(30);
        player1.showInventory();
    }
}
